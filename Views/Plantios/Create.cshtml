@model Plantech.ViewModels.PlantioViewModel

@section Styles {
    <link rel="stylesheet" href="~/css/detalhes.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/edit.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/main.css" asp-append-version="true" />
}

@{
    ViewData["Title"] = "Novo Plantio";
}
<br><br>
<h2>@ViewData["Title"]</h2>
<br>
<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="row">
        <div class="card-plan p-5">
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label>Nome do Funcionário</label>
                <input class="form-control" value="@ViewData["FuncionarioNome"]" readonly  style="margin-bottom: 20px;"/>
            
            </div>

            <input type="hidden" asp-for="FuncionarioId" />
            <input type="hidden" asp-for="DataPlantio" />
            <input type="hidden" asp-for="Status" />

            <div class="d-flex gap-3">
                <div class="col-8 form-group">
                    <label asp-for="HortalicaId">Hortaliças</label>
                    <select asp-for="HortalicaId" class="form-control" style="margin-bottom: 20px;">
                        <option value="">-- Selecionar --</option>
                        @foreach (var item in (SelectList)ViewData["HortalicaId"])
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
                <div class=" col-6 form-group">
                    <label asp-for="Quantidade"></label>
                    <input asp-for="Quantidade" class="form-control" style="width: 150px;" />
                </div>

            </div>

            <div class="form-group">
                <label>Lotes de Insumo</label>
                <div id="insumos-container" class="insumos-scroll">
                    @foreach (var item in (IEnumerable<dynamic>)ViewData["LotesInsumo"])
                    {
                        <div class="insumo-item">
                            <label>
                                <input type="checkbox" name="SelectedInsumos" value="@item.Id"
                                    data-quantidade="@item.Quantidade" data-validade="@item.DataValidade">
                                @item.Nome (Quantidade: @item.Quantidade, Validade: @item.DataValidade)
                            </label>
                        </div>
                    }
                
                </div>
                <span id="insumoError" class="text-danger" style="display:none;">É necessário selecionar ao menos um
                        insumo.</span>
            </div>

        </div>
    </div>

    <div class="form-group mt-4 text-end">
        <button type="submit" class="btn btn-primary" style="width: 150px; margin-right: 60px;">Salvar</button>
    </div>
    <div>
        <a asp-controller="Plantios" asp-action="Index" class="btn btn-secondary"
            style="width: 150px; margin-top: -15px;">Voltar</a>
    </div>
</form>

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const checkboxes = document.querySelectorAll('input[type="checkbox"][name="SelectedInsumos"]');
            const insumoError = document.getElementById('insumoError');
            const form = document.querySelector('form');

            form.addEventListener('submit', function (event) {
                let insumoSelected = false;
                checkboxes.forEach(checkbox => {
                    if (checkbox.checked) {
                        insumoSelected = true;
                    }
                });

                if (!insumoSelected) {
                    event.preventDefault();
                    insumoError.style.display = 'block';
                } else {
                    insumoError.style.display = 'none';
                }
            });

            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function () {
                    const quantidadeMaxima = parseInt(this.getAttribute('data-quantidade'));
                    const validade = new Date(this.getAttribute('data-validade'));
                    const hoje = new Date();
                    if (this.checked) {
                        const quantidadeInput = document.createElement('input');
                        quantidadeInput.type = 'number';
                        quantidadeInput.name = `InsumosQuantities[${this.value}]`;
                        quantidadeInput.classList.add('form-control');
                        quantidadeInput.placeholder = 'Quantidade';
                        quantidadeInput.setAttribute('max', quantidadeMaxima);
                        quantidadeInput.setAttribute('min', 0);
                        quantidadeInput.required = true;
                        this.parentElement.appendChild(quantidadeInput);

                        quantidadeInput.addEventListener('input', function () {
                            const quantidade = parseInt(this.value);
                            if (quantidade > quantidadeMaxima) {
                                alert('Quantidade não pode ser maior que a disponível.');
                                this.value = quantidadeMaxima;
                            } else if (quantidade < 0) {
                                alert('Quantidade não pode ser menor que 0.');
                                this.value = 0;
                            }
                        });
                        if (validade - hoje <= 7 * 24 * 60 * 60 * 1000) {
                            this.parentElement.style.backgroundColor = '#ffcccc';
                            alert('Atenção: Este produto está perto da validade.');
                        }
                    } else {
                        const quantidadeInput = this.parentElement.querySelector(`input[name="InsumosQuantities[${this.value}]"]`);
                        if (quantidadeInput) {
                            quantidadeInput.remove();
                        }
                        this.parentElement.style.backgroundColor = '';
                    }
                });
            });
        });
    </script>
}
