@model Plantech.ViewModels.PlantioViewModel

@{
    ViewData["Title"] = "Create";
}
<br><br>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="FuncionarioNome"></label>
        <input asp-for="FuncionarioNome" class="form-control" readonly />
    </div>
    <div class="form-group">
        <label asp-for="HortalicaId"></label>
        <select asp-for="HortalicaId" class="form-control">
            <option value="">-- Selecionar --</option>
            @foreach (var item in (SelectList)ViewBag.HortalicaId)
            {
                <option value="@item.Value">@item.Text</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label asp-for="Quantidade"></label>
        <input asp-for="Quantidade" class="form-control" />
    </div>
    <div class="form-group">
        <label>Insumos Plantios</label>
        <div id="insumos-container">
            @foreach (var item in (SelectList)ViewBag.InsumosPlantios)
            {
                <div class="insumo-item">
                    <label>
                        <input type="checkbox" name="SelectedInsumos" value="@item.Value" />
                        @item.Text
                    </label>
                    <input type="number" name="InsumosQuantities[@item.Value]" class="form-control" placeholder="Quantidade" />
                </div>
            }
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Salvar</button>
</form>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">
        @Model.ErrorMessage
    </div>
}

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Validação de quantidade de insumo via JS
        document.querySelector("form").addEventListener("submit", function (event) {
            var quantidadeInputs = document.querySelectorAll("[name^='InsumosQuantities']");
            var totalQuantidade = 0;
            quantidadeInputs.forEach(function (input) {
                var quantidade = parseInt(input.value);
                if (!isNaN(quantidade)) {
                    totalQuantidade += quantidade;
                }
            });
            // Suponha que 'quantidadeMax' seja a quantidade disponível no lote
            var quantidadeMax = /* Atribua aqui a quantidade máxima do lote */;
            if (totalQuantidade > quantidadeMax) {
                alert("A quantidade total de insumos usada não pode ser maior que a quantidade disponível no lote.");
                event.preventDefault();
            }
        });
    </script>
}
