@model IEnumerable<Plantech.DTOs.LotesInsumoDTO>

@{
    ViewData["Title"] = "Index";
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="~/css/index.css" asp-append-version="true" />
    
}

<br>
<h1>Lotes de Insumos</h1>

@if (User.IsInRole("Administrador") || User.IsInRole("Comprador"))
{
    <div class="border shadow rounded p-2 bg-white">
        <div style="max-height: 350px; overflow-y: auto;">
            <table class="table table-striped table-hover" id="lotesInsumoTable">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Quantidade)
                        </th>
                        <th>Preço unitário</th>
                        <th>Data de Entrada</th>
                        <th>Data de Validade</th>
                        <th>@Html.DisplayNameFor(model => model.Status)</th>
                        <th>@Html.DisplayNameFor(model => model.Nome)</th>
                        <th>Insumo</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="lotesInsumoBody">
                    @foreach (var item in Model)
                    {
                        <tr class="lote-insumo-row" data-nome="@item.Nome">
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantidade)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PrecoUnitario)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataEntrada)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataValidade)
                                <div class="tooltip-container" data-tooltip="Ajustar validade dos Lotes">
                                    <i class="fas fa-exclamation-circle"></i>
                                    <span class="tooltip-text">Ajustar validade dos Lotes</span>
                                </div>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nome)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Insumo.Nome)
                            </td>
                            <td>
                                @if (User.IsInRole("Administrador"))
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                    <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325"/>
                                </svg></a>
                                }
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"/>
                                <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
                                </svg>
                            </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    @if (User.IsInRole("Comprador"))
    {
    <div class="text-end mt-2">
        <a asp-controller="Comprador" asp-action="Index" style=" width: 150px;" class="btn btn-secondary">Voltar</a>
    </div>
    }
    @if (User.IsInRole("Administrador"))
    {
    <div class="text-end mt-2">
        <a asp-controller="Administrador" asp-action="Pendencias" style=" width: 150px;" class="btn btn-secondary">Voltar</a>
    </div>
    }
}

@if (User.IsInRole("Agricultor"))
{
<div class="border shadow rounded p-2 bg-white">
    <div style="max-height: 350px; overflow-y: auto;">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Quantidade)
                    </th>
                    <th>Preço unitário</th>
                    <th>Data de Entrada</th>
                    <th>Data de Validade</th>
                    <th>@Html.DisplayNameFor(model => model.Status)</th>
                    <th>@Html.DisplayNameFor(model => model.Nome)</th>
                    <th>Insumo</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantidade)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PrecoUnitario)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DataEntrada)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DataValidade)
                            <div class="tooltip-container" data-tooltip="Ajustar validade dos Lotes">
                                <i class="fas fa-exclamation-circle"></i>
                                <span class="tooltip-text">Ajustar validade dos Lotes</span>
                            </div>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nome)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Insumo.Nome)
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"/>
                                <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
                                </svg>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<br>
<div class="text-end mt-2">
    <a asp-controller="Agricultor" asp-action="Index" class="btn btn-secondary" style="width:150px;">Voltar</a>
</div>
}

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const tableBody = document.getElementById("lotesInsumoBody");
        const rows = Array.from(tableBody.getElementsByClassName("lote-insumo-row"));

        // Ordena as linhas, colocando as com "Lote" ou "Rejeito" no nome no topo e adiciona um aviso na coluna "Data de Validade"
        rows.sort((a, b) => {
            const nomeA = a.getAttribute("data-nome");
            const nomeB = b.getAttribute("data-nome");

            const isLoteOrRejeitoA = nomeA.includes("Lote") || nomeA.includes("Rejeito");
            const isLoteOrRejeitoB = nomeB.includes("Lote") || nomeB.includes("Rejeito");

            // Adiciona um aviso na coluna "Data de Validade" se o nome contém "Lote" ou "Rejeito"
            if (isLoteOrRejeitoA && !a.querySelector('.text-danger')) {
                a.classList.add("table-warning");
                @* a.querySelectorAll("td")[3].innerHTML += " <span class='text-danger'>(Ajustar validade dos Lotes)</span>"; *@
            }
            if (isLoteOrRejeitoB && !b.querySelector('.text-danger')) {
                b.classList.add("table-warning");
                @* b.querySelectorAll("td")[3].innerHTML += " <span class='text-danger'>(Ajustar validade dos Lotes)</span>"; *@
            }

            // Move os itens com "Lote" ou "Rejeito" no nome para o topo
            if (isLoteOrRejeitoA && !isLoteOrRejeitoB) return -1;
            if (!isLoteOrRejeitoA && isLoteOrRejeitoB) return 1;
            return 0;
        });

        // Limpa o corpo da tabela e adiciona as linhas ordenadas
        tableBody.innerHTML = "";
        rows.forEach(row => tableBody.appendChild(row));
    });
</script>
