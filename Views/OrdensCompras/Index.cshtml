@model IEnumerable<Plantech.DTOs.OrdensCompraDTO>

@{
    ViewData["Title"] = "Index";
}

@if (User.IsInRole("Comprador") || User.IsInRole("Administrador"))
{
    <br>

    <br>
    <h2>Ordens de Compra</h2>
    <div class="border shadow rounded p-2 bg-white">
        <div style="max-height: 350px; overflow-y: auto;">
            <table class="table table-striped table-hover" id="ordensCompraTable">
                <thead>
                    <tr>
                        <th>Total</th>
                        <th>Status</th>
                        <th>Data Compra</th>
                        <th>Fornecedor</th>
                        <th>Funcionario</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="ordensCompraBody">
                    @foreach (var item in Model)
                    {
                        <tr class="ordem-compra-row" data-status="@item.Status">
                            <td>
                                @Html.DisplayFor(modelItem => item.Total)
                            </td>
                            @if (item.Status == "pago")
                            {
                                <td style="color: rgb(0, 139, 69);">
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                            }
                            else
                            {
                                <td style="color: rgb(139, 0, 0);">
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.DataCompra)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Fornecedor.RazaoSocial)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Funcionario.Nome)
                            </td>
                            <td>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary"><svg
                                        xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                        class="bi bi-info-circle" viewBox="0 0 16 16">
                                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                        <path
                                            d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0" />
                                    </svg>
                                </a>
                                @if (User.IsInRole("Administrador"))
                                {
                                    @if (item.Status == "pendente")
                                    {
                                        <form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;">
                                            <button type="submit" class="btn btn-danger"><svg xmlns="http://www.w3.org/2000/svg"
                                                    width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                                    <path
                                                        d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                                    <path
                                                        d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                                                </svg></button>
                                        </form>
                                        <form asp-action="MudarStatus" asp-route-id="@item.Id" method="post" style="display:inline;">
                                            <button type="submit" class="btn btn-warning"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1 11.5a.5.5 0 0 0 .5.5h11.793l-3.147 3.146a.5.5 0 0 0 .708.708l4-4a.5.5 0 0 0 0-.708l-4-4a.5.5 0 0 0-.708.708L13.293 11H1.5a.5.5 0 0 0-.5.5m14-7a.5.5 0 0 1-.5.5H2.707l3.147 3.146a.5.5 0 1 1-.708.708l-4-4a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 4H14.5a.5.5 0 0 1 .5.5"/>
</svg></button>
                                        </form>
                                    }
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="mt-2 d-flex justify-content-end">

        @if (User.IsInRole("Comprador"))
        {
            <div>
                <a asp-controller="Comprador" asp-action="Index" class="btn btn-secondary mx-2">Voltar</a>
            </div>
        }
        @if (User.IsInRole("Administrador"))
        {
            <div>
                <a asp-controller="Administrador" asp-action="Pendencias" class="btn btn-secondary mx-2">Voltar</a>
            </div>
        }

        <div>
            <a asp-action="NovaCompra" class="btn btn-primary">Nova Compra</a>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const tableBody = document.getElementById("ordensCompraBody");
            const rows = Array.from(tableBody.getElementsByClassName("ordem-compra-row"));

            // Ordena as linhas, colocando as com status "pendente" no topo
            rows.sort((a, b) => {
                const statusA = a.getAttribute("data-status");
                const statusB = b.getAttribute("data-status");

                // Se o status Ã© "pendente", adiciona destaque e move para o topo
                if (statusA === "pendente") {
                    a.classList.add("table-warning");
                }
                if (statusB === "pendente") {
                    b.classList.add("table-warning");
                }

                // Move os itens com status "pendente" para o topo
                if (statusA === "pendente" && statusB !== "pendente") return -1;
                if (statusA !== "pendente" && statusB === "pendente") return 1;
                return 0;
            });

            // Limpa o corpo da tabela e adiciona as linhas ordenadas
            tableBody.innerHTML = "";
            rows.forEach(row => tableBody.appendChild(row));
        });
    </script>
}
